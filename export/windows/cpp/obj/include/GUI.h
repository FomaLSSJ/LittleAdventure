// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_GUI
#define INCLUDED_GUI

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS0(GUI)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES GUI_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef GUI_obj OBJ_;
		GUI_obj();

	public:
		enum { _hx_ClassId = 0x00362a5b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="GUI")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"GUI"); }
		static hx::ObjectPtr< GUI_obj > __new();
		static hx::ObjectPtr< GUI_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GUI_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GUI","\x5b","\x2a","\x36","\x00"); }

		 ::flixel::FlxSprite dialogBg;
		 ::flixel::text::FlxText dialogText;
		 ::flixel::FlxSprite blank;
		 ::flixel::text::FlxText status;
		 ::flixel::FlxSprite inventoryBg;
		 ::flixel::text::FlxText inventoryText;
		 ::flixel::FlxSprite selector;
		 ::flixel::group::FlxTypedGroup dialog;
		 ::flixel::group::FlxTypedGroup inventory;
		 ::flixel::group::FlxTypedGroup items;
		void update(Float elapsed);

		void init();
		::Dynamic init_dyn();

		void toggleDialog();
		::Dynamic toggleDialog_dyn();

		void toggleInventory();
		::Dynamic toggleInventory_dyn();

		void updateInventory();
		::Dynamic updateInventory_dyn();

		void setText(::String text);
		::Dynamic setText_dyn();

		bool isActive();
		::Dynamic isActive_dyn();

};


#endif /* INCLUDED_GUI */ 
