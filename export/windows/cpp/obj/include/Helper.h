// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_Helper
#define INCLUDED_Helper

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Helper)



class HXCPP_CLASS_ATTRIBUTES Helper_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Helper_obj OBJ_;
		Helper_obj();

	public:
		enum { _hx_ClassId = 0x38e2f18e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Helper")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"Helper"); }
		static hx::ObjectPtr< Helper_obj > __new();
		static hx::ObjectPtr< Helper_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Helper_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Helper","\x8e","\xf1","\xe2","\x38"); }

		void calc( ::Dynamic f, ::Dynamic s);
		::Dynamic calc_dyn();

		void addItem(::String name);
		::Dynamic addItem_dyn();

		void endDialog();
		::Dynamic endDialog_dyn();

};


#endif /* INCLUDED_Helper */ 
